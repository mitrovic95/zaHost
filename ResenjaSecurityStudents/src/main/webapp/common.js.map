{"version":3,"sources":["webpack:///./src/app/services/predstava-osobe.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAA2C;AACZ;AAEoB;AACD;AAMlD;IAMI,+BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJ7B,cAAS,GAA8B,IAAI,4CAAO,EAAE,CAAC;QACpD,SAAI,GAAG,qBAAqB,CAAC;QAC7B,WAAM,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAEjC,CAAC;IAEzC,iDAAiB,GAAjB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAiC,CAAC;IAClE,CAAC;IAED,mDAAmB,GAAnB,UAAoB,EAAU;QAC5B,oCAAoC;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,IAAI,SAAI,EAAI,CAA+B,CAAC;IAC3E,CAAC;IAfQ,qBAAqB;QAHjC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAO4B,+DAAU;OAN3B,qBAAqB,CAkCjC;IAAD,4BAAC;CAAA;AAlCiC","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { PredstavaOsoba } from 'src/app/model/predstavaOsoba';\nimport { HttpHeaders } from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PredstavaOsobeService {\n\n    public repertoar: Subject<PredstavaOsoba[]> = new Subject();\n    private path = '/api/predstavaOsoba';\n    private header = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n    constructor(private http: HttpClient) { }\n\n    getPredstavaOsobe(): Observable<PredstavaOsoba[]> {\n      return this.http.get(this.path) as Observable<PredstavaOsoba[]>;\n    }\n\n    getPredstavaOsobeId(id: number): Observable<PredstavaOsoba> {\n      // console.log('JEDAN USER ID', id);\n      return this.http.get(`${this.path}/${id}`) as Observable<PredstavaOsoba>;\n    }\n\n  //   deleteCompany(company: Company) {\n  //     return this.http.delete(`${this.path}/${company.id}`);\n  //   }\n\n//   saveCompany(company: Company): Observable<Company> {\n  //     if (company.id === undefined) {\n  //       return this.http.post(this.path, company, {headers: this.header}) as Observable<Company>;\n  //     }\n  //     else {\n  //       return this.http.put(`${this.path}/${company.id}`, company, {headers: this.header}) as Observable<Company>;\n  //     }\n  //   }\n\n  //   getCompanyByName(name: string): Observable<Company[]>  {\n  //    return this.http.get(this.path + '?name=' + name) as Observable<Company[]>;\n  //   }\n  // }\n}\n"],"sourceRoot":""}