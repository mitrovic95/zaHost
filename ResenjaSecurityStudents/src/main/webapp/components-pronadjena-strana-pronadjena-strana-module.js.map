{"version":3,"sources":["webpack:///./src/app/components/pronadjena-strana/pronadjena-strana.component.css","webpack:///./src/app/components/pronadjena-strana/pronadjena-strana.component.html","webpack:///./src/app/components/pronadjena-strana/pronadjena-strana.component.ts","webpack:///./src/app/components/pronadjena-strana/pronadjena-strana.module.ts","webpack:///./src/app/components/pronadjena-strana/pronadjena-strana.routing.ts","webpack:///./src/app/components/vesti/vesti.component.css","webpack:///./src/app/components/vesti/vesti.component.html","webpack:///./src/app/components/vesti/vesti.component.ts","webpack:///./src/app/components/vesti/vesti.module.ts","webpack:///./src/app/components/vesti/vesti.routing.ts","webpack:///./src/app/services/vesti.service.ts"],"names":[],"mappings":"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","file":"components-pronadjena-strana-pronadjena-strana-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"\\r\\n\\r\\n<a routerLink=\\\"/login\\\">LOGIN</a>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pronadjena-strana',\r\n  templateUrl: './pronadjena-strana.component.html',\r\n  styleUrls: ['./pronadjena-strana.component.css']\r\n})\r\nexport class PronadjenaStranaComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {routing} from './pronadjena-strana.routing';\r\nimport { PronadjenaStranaComponent } from 'src/app/components/pronadjena-strana/pronadjena-strana.component';\r\nimport { VestiModule } from 'src/app/components/vesti/vesti.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    VestiModule,\r\n    routing,\r\n  ],\r\n  declarations: [PronadjenaStranaComponent],\r\n  providers: []\r\n})\r\nexport class PronadjenaStranaModule { }\r\n","import {Routes, RouterModule} from '@angular/router';\r\nimport {ModuleWithProviders} from '@angular/core';\r\nimport { PronadjenaStranaComponent } from 'src/app/components/pronadjena-strana/pronadjena-strana.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PronadjenaStranaComponent},\r\n  // { path: '', redirectTo: 'pstrana', pathMatch: 'full'},\r\n  // { path: 'login', loadChildren: './components/login/login.module#LoginModule'}\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\r\n","module.exports = \"img {\\r\\n  width: 30%;\\r\\n        height: 270px;\\r\\n}\"","module.exports = \"<div *ngFor=\\\"let vest of vesti; let i = index\\\">\\r\\n  <div>Naslov: {{vest.naslov}}</div>\\r\\n  <div>Opis: {{vest.opis}}</div>\\r\\n  <img class=\\\"car--image\\\" src=\\\"{{vest.slike.sadrzaj}}\\\">\\r\\n</div>\\r\\n\\r\\n<a routerLink=\\\"/login\\\">LOGIN</a>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Vesti } from 'src/app/model/vesti';\r\nimport { VestiService } from 'src/app/services/vesti.service';\r\n\r\n@Component({\r\n  selector: 'app-vesti',\r\n  templateUrl: './vesti.component.html',\r\n  styleUrls: ['./vesti.component.css']\r\n})\r\nexport class VestiComponent implements OnInit {\r\n\r\n  public vesti: Vesti[];\r\n  public vest: Vesti;\r\n  public id?: number;\r\n\r\n  constructor (private vestiService: VestiService) { }\r\n\r\n  ngOnInit() {\r\n    this.vestiService.getVesti().subscribe((vesti) => {\r\n      this.vesti = vesti;\r\n    });\r\n    this.vestiService.getVesti();\r\n    // this.vestiService.vesti.subscribe(data => console.log(data));\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {routing} from './vesti.routing';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { VestiService } from 'src/app/services/vesti.service';\r\nimport { VestiComponent } from 'src/app/components/vesti/vesti.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n  CommonModule,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n    routing,\r\n  ],\r\n  declarations: [VestiComponent],\r\n  providers: [VestiService]\r\n})\r\nexport class VestiModule { }\r\n","import {Routes, RouterModule} from '@angular/router';\r\nimport {ModuleWithProviders} from '@angular/core';\r\nimport { VestiComponent } from 'src/app/components/vesti/vesti.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: VestiComponent},\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { Vesti } from 'src/app/model/vesti';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VestiService {\r\n\r\n  public slike: Subject<Vesti[]> = new Subject();\r\n  private path = '/api/vesti';\r\n  private header = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getVesti(): Observable<Vesti[]> {\r\n    return this.http.get(this.path) as Observable<Vesti[]>;\r\n  }\r\n\r\n//   getCompany(id: number): Observable<Company> {\r\n//     // console.log('JEDAN USER ID', id);\r\n//     return this.http.get(`${this.path}/${id}`) as Observable<Company>;\r\n//   }\r\n\r\n//   deleteCompany(company: Company) {\r\n//     return this.http.delete(`${this.path}/${company.id}`);\r\n//   }\r\n\r\n//   saveCompany(company: Company): Observable<Company> {\r\n//     if (company.id === undefined) {\r\n//       return this.http.post(this.path, company, {headers: this.header}) as Observable<Company>;\r\n//     }\r\n//     else {\r\n//       return this.http.put(`${this.path}/${company.id}`, company, {headers: this.header}) as Observable<Company>;\r\n//     }\r\n//   }\r\n\r\n//   getCompanyByName(name: string): Observable<Company[]>  {\r\n//    return this.http.get(this.path + '?name=' + name) as Observable<Company[]>;\r\n//   }\r\n// }\r\n}\r\n"],"sourceRoot":""}