{"version":3,"sources":["webpack:///./src/app/components/osobe/osobe.component.css","webpack:///./src/app/components/osobe/osobe.component.html","webpack:///./src/app/components/osobe/osobe.component.ts","webpack:///./src/app/components/osobe/osobe.module.ts","webpack:///./src/app/components/osobe/osobe.routing.ts","webpack:///./src/app/services/osobe.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,mB;;;;;;;;;;;ACAA,mDAAmD,4BAA4B,WAAW,iBAAiB,eAAe,iBAAiB,cAAc,iBAAiB,cAAc,iBAAiB,YAAY,iBAAiB,iBAAiB,iBAAiB,oBAAoB,iBAAiB,YAAY,6CAA6C,gBAAgB,gBAAgB,oBAAoB,mBAAmB,mBAAmB,iBAAiB,sBAAsB,yBAAyB,iBAAiB,GAAG,O;;;;;;;;;;;;;;;;;;;;;;;;;ACAle;AAEY;AAO9D;IAME,wBAAqB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEpD,iCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,UAAC,KAAK;YAC3C,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,cAAI,IAAI,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,CAAC,CAAC;IAE/D,CAAC;IAfU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAOmC,2EAAY;OANpC,cAAc,CAgB1B;IAAD,qBAAC;CAAA;AAhB0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTc;AACM;AACP;AACK;AACQ;AACqB;AACZ;AAY9D;IAAA;IAA2B,CAAC;IAAf,WAAW;QAVvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACT,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACjB,sDAAO;aACR;YACD,YAAY,EAAE,CAAC,uFAAc,CAAC;YAC9B,SAAS,EAAE,CAAC,2EAAY,CAAC;SAC1B,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;;AClBxB;AAAA;AAAA;AAAA;AAAqD;AAEqB;AAE1E,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,uFAAc,EAAC;CACvC,CAAC;AAEK,IAAM,OAAO,GAAwB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR/B;AACO;AACnB;AACoB;AAOnD;IAME,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJ7B,UAAK,GAAqB,IAAI,4CAAO,EAAE,CAAC;QACvC,SAAI,GAAG,YAAY,CAAC;QACpB,WAAM,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAEjC,CAAC;IAEzC,+BAAQ,GAAR;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAwB,CAAC;IACzD,CAAC;IAVU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAO0B,+DAAU;OANzB,YAAY,CAkCxB;IAAD,mBAAC;CAAA;AAlCwB","file":"components-osobe-osobe-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let osoba of osobe; let i = index\\\">\\n  <div>{{osoba.ime}}</div>\\n  <div>{{osoba.prezime}}</div>\\n  <div>{{osoba.slika1}}</div>\\n  <div>{{osoba.slika2}}</div>\\n  <div>{{osoba.opis}}</div>\\n  <div>{{osoba.prioritet}}</div>\\n  <div>{{osoba.brojTelefona}}</div>\\n  <div>{{osoba.mejl}}</div>\\n</div>\\n<!-- export interface Osoba {\\n  id?: number;\\n  ime: string;\\n  prezime: string;\\n  slika1: string;\\n  slika2: string;\\n  opis: string;\\n  prioritet: number;\\n  brojTelefona: number;\\n  mejl: string;\\n} -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Osoba } from 'src/app/model/osoba';\nimport { OsobeService } from 'src/app/services/osobe.service';\n\n@Component({\n  selector: 'app-osobe',\n  templateUrl: './osobe.component.html',\n  styleUrls: ['./osobe.component.css']\n})\nexport class OsobeComponent implements OnInit {\n\n  public osobe: Osoba[];\n  public osoba: Osoba;\n  public id?: number;\n\n  constructor (private osobaService: OsobeService) { }\n\n  ngOnInit() {\n    this.osobaService.getOsobe().subscribe((osobe) => {\n      this.osobe = osobe;\n    });\n    this.osobaService.getOsobe();\n    this.osobaService.osobe.subscribe(data => console.log(data));\n\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {routing} from './osobe.routing';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { OsobeComponent } from 'src/app/components/osobe/osobe.component';\r\nimport { OsobeService } from 'src/app/services/osobe.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n  CommonModule,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n    routing,\r\n  ],\r\n  declarations: [OsobeComponent],\r\n  providers: [OsobeService]\r\n})\r\nexport class OsobeModule { }\r\n","import {Routes, RouterModule} from '@angular/router';\r\nimport {ModuleWithProviders} from '@angular/core';\r\nimport { OsobeComponent } from 'src/app/components/osobe/osobe.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: OsobeComponent},\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Osoba } from './../model/osoba';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OsobeService {\n\n  public osobe: Subject<Osoba[]> = new Subject();\n  private path = '/api/osoba';\n  private header = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n  constructor(private http: HttpClient) { }\n\n  getOsobe(): Observable<Osoba[]> {\n    return this.http.get(this.path) as Observable<Osoba[]>;\n  }\n\n//   getCompany(id: number): Observable<Company> {\n//     // console.log('JEDAN USER ID', id);\n//     return this.http.get(`${this.path}/${id}`) as Observable<Company>;\n//   }\n\n//   deleteCompany(company: Company) {\n//     return this.http.delete(`${this.path}/${company.id}`);\n//   }\n\n//   saveCompany(company: Company): Observable<Company> {\n//     if (company.id === undefined) {\n//       return this.http.post(this.path, company, {headers: this.header}) as Observable<Company>;\n//     }\n//     else {\n//       return this.http.put(`${this.path}/${company.id}`, company, {headers: this.header}) as Observable<Company>;\n//     }\n//   }\n\n//   getCompanyByName(name: string): Observable<Company[]>  {\n//    return this.http.get(this.path + '?name=' + name) as Observable<Company[]>;\n//   }\n// }\n}\n"],"sourceRoot":""}