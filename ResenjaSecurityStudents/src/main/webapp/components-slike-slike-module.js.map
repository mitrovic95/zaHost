{"version":3,"sources":["webpack:///./src/app/components/slike/slike.component.css","webpack:///./src/app/components/slike/slike.component.html","webpack:///./src/app/components/slike/slike.component.ts","webpack:///./src/app/components/slike/slike.module.ts","webpack:///./src/app/components/slike/slike.routing.ts","webpack:///./src/app/services/slike.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,uBAAuB,iBAAiB,0BAA0B,KAAK,C;;;;;;;;;;;ACAvE,mDAAmD,4BAA4B,cAAc,iBAAiB,aAAa,uBAAuB,eAAe,Y;;;;;;;;;;;;;;;;;;;;;;;;;ACA/G;AAEY;AAO9D;IAME,wBAAqB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEpD,iCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,UAAC,KAAK;YAC3C,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,cAAI,IAAI,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,CAAC,CAAC;IAE/D,CAAC;IAfU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAOmC,2EAAY;OANpC,cAAc,CAiB1B;IAAD,qBAAC;CAAA;AAjB0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTc;AACM;AACP;AACK;AACQ;AACqB;AACZ;AAY9D;IAAA;IAA2B,CAAC;IAAf,WAAW;QAVvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACT,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACjB,sDAAO;aACR;YACD,YAAY,EAAE,CAAC,uFAAc,CAAC;YAC9B,SAAS,EAAE,CAAC,2EAAY,CAAC;SAC1B,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;;AClBxB;AAAA;AAAA;AAAA;AAAqD;AAEqB;AAE1E,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,uFAAc,EAAC;CACvC,CAAC;AAEK,IAAM,OAAO,GAAwB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR/B;AAEQ;AACpB;AACmB;AAMlD;IAMI,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJ7B,UAAK,GAAqB,IAAI,4CAAO,EAAE,CAAC;QACvC,SAAI,GAAG,YAAY,CAAC;QACpB,WAAM,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAEjC,CAAC;IAEzC,+BAAQ,GAAR;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAwB,CAAC;IACzD,CAAC;IAVQ,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAO4B,+DAAU;OAN3B,YAAY,CAkCtB;IAAD,mBAAC;CAAA;AAlCsB","file":"components-slike-slike-module.js","sourcesContent":["module.exports = \"img {\\r\\n  width: 30%;\\r\\n        height: 270px;\\r\\n}\"","module.exports = \"<div *ngFor=\\\"let slika of slike; let i = index\\\">\\n  <div>{{slika.namena}}</div>\\n  <div>{{slika.datum}}</div>\\n  <img src=\\\"{{slika.sadrzaj}}\\\">\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Slike } from 'src/app/model/slike';\nimport { SlikeService } from 'src/app/services/slike.service';\n\n@Component({\n  selector: 'app-slike',\n  templateUrl: './slike.component.html',\n  styleUrls: ['./slike.component.css']\n})\nexport class SlikeComponent implements OnInit {\n\n  public slike: Slike[];\n  public slika: Slike;\n  public id?: number;\n\n  constructor (private slikeService: SlikeService) { }\n\n  ngOnInit() {\n    this.slikeService.getSlike().subscribe((slike) => {\n      this.slike = slike;\n    });\n    this.slikeService.getSlike();\n    this.slikeService.slike.subscribe(data => console.log(data));\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {routing} from './slike.routing';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SlikeComponent } from 'src/app/components/slike/slike.component';\r\nimport { SlikeService } from 'src/app/services/slike.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n  CommonModule,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n    routing,\r\n  ],\r\n  declarations: [SlikeComponent],\r\n  providers: [SlikeService]\r\n})\r\nexport class SlikeModule { }\r\n","import {Routes, RouterModule} from '@angular/router';\r\nimport {ModuleWithProviders} from '@angular/core';\r\nimport { SlikeComponent } from 'src/app/components/slike/slike.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: SlikeComponent},\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Injectable } from '@angular/core';\nimport { Slike } from 'src/app/model/slike';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SlikeService {\n\n    public slike: Subject<Slike[]> = new Subject();\n    private path = '/api/slike';\n    private header = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n    constructor(private http: HttpClient) { }\n\n    getSlike(): Observable<Slike[]> {\n      return this.http.get(this.path) as Observable<Slike[]>;\n    }\n\n  //   getCompany(id: number): Observable<Company> {\n  //     // console.log('JEDAN USER ID', id);\n  //     return this.http.get(`${this.path}/${id}`) as Observable<Company>;\n  //   }\n\n  //   deleteCompany(company: Company) {\n  //     return this.http.delete(`${this.path}/${company.id}`);\n  //   }\n\n  //   saveCompany(company: Company): Observable<Company> {\n  //     if (company.id === undefined) {\n  //       return this.http.post(this.path, company, {headers: this.header}) as Observable<Company>;\n  //     }\n  //     else {\n  //       return this.http.put(`${this.path}/${company.id}`, company, {headers: this.header}) as Observable<Company>;\n  //     }\n  //   }\n\n  //   getCompanyByName(name: string): Observable<Company[]>  {\n  //    return this.http.get(this.path + '?name=' + name) as Observable<Company[]>;\n  //   }\n  // }\n  }\n\n\n"],"sourceRoot":""}