{"version":3,"sources":["webpack:///./src/app/components/slike/slike.component.css","webpack:///./src/app/components/slike/slike.component.html","webpack:///./src/app/components/slike/slike.component.ts","webpack:///./src/app/components/slike/slike.module.ts","webpack:///./src/app/components/slike/slike.routing.ts","webpack:///./src/app/services/slike.service.ts"],"names":[],"mappings":"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","file":"components-slike-slike-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"container-body\\\">\\r\\n    <div class=\\\"container-repertoire\\\">\\r\\n      <div *ngFor=\\\"let slika of slike; let i = index\\\">\\r\\n        <div>{{slika.namena}}</div>\\r\\n        <div>{{slika.datum | date:'shortDate'}}</div>\\r\\n        <img src=\\\"{{slika.sadrzaj}}\\\">\\r\\n      </div>\\r\\n      <div class=\\\"pagination\\\">\\r\\n        <div class=\\\"left\\\" (click)=\\\"ocitajStranu(0)\\\" style=\\\"margin-left: 1px\\\"></div>\\r\\n        <div class=\\\"page\\\" >\\r\\n          <span><span *ngIf= \\\"currentPageNumber<10\\\">0</span>{{currentPageNumber+1}}</span>\\r\\n        </div>\\r\\n        <div class=\\\"line\\\" >\\r\\n            <!-- *ngFor=\\\"let number of ukupnoStranaNiz; let i=index\\\"\\r\\n          <a [ngStyle]=\\\"{'border': currentPageNumber == i ? '2px solid #337ab7' : '#ddd'}\\\"\\r\\n              (click)=\\\"ocitajStranu(i)\\\" class=\\\"page-link\\\" style=\\\"margin-left: 1px\\\">{{i+1}}</a> -->\\r\\n        </div>\\r\\n        <div class=\\\"pages\\\">\\r\\n            <span><span *ngIf= \\\"ukupnoStrana<10\\\">0</span>{{ukupnoStrana}}</span>\\r\\n        </div>\\r\\n        <div class=\\\"right\\\"  (click)=\\\"ocitajSledecuStranu()\\\" style=\\\"margin-left: 1px\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Slike } from 'src/app/model/slike';\r\nimport { SlikeService } from 'src/app/services/slike.service';\r\n\r\n@Component({\r\n  selector: 'app-slike',\r\n  templateUrl: './slike.component.html',\r\n  styleUrls: ['./slike.component.css']\r\n})\r\nexport class SlikeComponent implements OnInit {\r\n\r\n  public slike: Slike[];\r\n  public slika: Slike;\r\n  public id?: number;\r\n  public currentPageNumber: number;\r\n  // tslint:disable-next-line:no-inferrable-types\r\n  public sizePage: number = 6;\r\n  public ukupnoRepertoara: number;\r\n  public ukupnoStrana: number;\r\n  public ukupnoStranaNiz: any[];\r\n\r\n  constructor (private slikeService: SlikeService) { }\r\n\r\n  ngOnInit() {\r\n    this.currentPageNumber = 0;\r\n    this.loadDate();\r\n\r\n  }\r\n\r\n  loadDate() {\r\n    this.slikeService.getSlika(this.currentPageNumber, this.sizePage)\r\n    .subscribe(\r\n      (data) => { this.slike = data.body;\r\n                  this.ukupnoRepertoara = + data.headers.get('X-Total-Count');\r\n                  this.ukupnoStrana = Math.ceil(this.ukupnoRepertoara / this.sizePage);\r\n                  this.ukupnoStranaNiz = Array(this.ukupnoStrana).fill(4);\r\n                  console.log(this.ukupnoStranaNiz);\r\n                }\r\n    );\r\n  }\r\n\r\n  delete(index: number) {\r\n    console.log(this.slike[index]);\r\n  }\r\n\r\n  ocitajStranu(i) {\r\n    this.currentPageNumber = i;\r\n    this.loadDate();\r\n  }\r\n\r\n  ocitajSledecuStranu() {\r\n    if (this.currentPageNumber == this.ukupnoStrana - 1){\r\n      return\r\n    }\r\n    this.currentPageNumber = this.currentPageNumber +  1;\r\n    this.loadDate();\r\n  }\r\n\r\n\r\n  // ngOnInit() {\r\n  //   this.slikeService.getSlike().subscribe((slike) => {\r\n  //     this.slike = slike;\r\n  //   });\r\n  //   this.slikeService.getSlike();\r\n  //   this.slikeService.slike.subscribe(data => console.log(data));\r\n\r\n  // }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {routing} from './slike.routing';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SlikeComponent } from 'src/app/components/slike/slike.component';\r\nimport { SlikeService } from 'src/app/services/slike.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n  CommonModule,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n    routing,\r\n  ],\r\n  declarations: [SlikeComponent],\r\n  providers: [SlikeService]\r\n})\r\nexport class SlikeModule { }\r\n","import {Routes, RouterModule} from '@angular/router';\r\nimport {ModuleWithProviders} from '@angular/core';\r\nimport { SlikeComponent } from 'src/app/components/slike/slike.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: SlikeComponent},\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Injectable } from '@angular/core';\r\nimport { Slike } from 'src/app/model/slike';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { HttpParams } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SlikeService {\r\n\r\n    public slike: Subject<Slike[]> = new Subject();\r\n    private path = '/api/slike';\r\n    private header = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getSlika(page: number, size ): Observable<HttpResponse<Slike[]>> {\r\n\r\n      let params = new HttpParams();\r\n      params = params.append('page', page.toString());\r\n      params = params.append('size', size.toString());\r\n\r\n      return this.http.get(this.path,  {params: params, observe: 'response' }) as Observable<HttpResponse<Slike[]>>;\r\n    }\r\n\r\n    // getSlike(): Observable<Slike[]> {\r\n    //   return this.http.get(this.path) as Observable<Slike[]>;\r\n    // }\r\n\r\n  //   getCompany(id: number): Observable<Company> {\r\n  //     // console.log('JEDAN USER ID', id);\r\n  //     return this.http.get(`${this.path}/${id}`) as Observable<Company>;\r\n  //   }\r\n\r\n  //   deleteCompany(company: Company) {\r\n  //     return this.http.delete(`${this.path}/${company.id}`);\r\n  //   }\r\n\r\n  //   saveCompany(company: Company): Observable<Company> {\r\n  //     if (company.id === undefined) {\r\n  //       return this.http.post(this.path, company, {headers: this.header}) as Observable<Company>;\r\n  //     }\r\n  //     else {\r\n  //       return this.http.put(`${this.path}/${company.id}`, company, {headers: this.header}) as Observable<Company>;\r\n  //     }\r\n  //   }\r\n\r\n  //   getCompanyByName(name: string): Observable<Company[]>  {\r\n  //    return this.http.get(this.path + '?name=' + name) as Observable<Company[]>;\r\n  //   }\r\n  // }\r\n  }\r\n\r\n\r\n"],"sourceRoot":""}